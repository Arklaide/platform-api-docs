swagger: "2.0"
info:
  description: "The Debbie APIs is a RESTful interface, allowing you to programmatically update, add and access much of your data on the platform. It provides predictable URLs for accessing resources, and uses built-in HTTP features to receive commands and return responses. This makes it easy to communicate with third party systems."
  version: "v1.0.0"
  title: "Debbie Platform API Docs"
  termsOfService: "https://debbie.dk/terms"
  contact:
    email: "support@debbie.dk"
  x-logo:
    url: "https://debbie-platform.github.io/platform-api-docs/deb-logo.svg"
host: "api.debbieapp.com"

basePath: "/v1"
tags:
  - name: "General"
    description: "The API fundamentals"
  - name: "Cases"
    description: "Everything about cases"
  - name: "Economy"
    description: "Everything about economy"
  - name: "Creditors"
    description: "Create and update creditors"
  - name: "Updates"
    description: "Update case"
  - name: "Interactions"
    description: "Create notes and messages"
  - name: "Webhooks"
    description: "Register new webhooks and delete them"
schemes:
  - "https"
paths:
  /files:
    post:
      tags:
        - "General"
      summary: "Upload file"
      description: "Store files like invoices and agreements by using this endpoint."
      operationId: "upload-file"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Data for the file"
          required: true
          schema:
            $ref: "#/definitions/NewFile"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/File"

  /files/:fileId:
    get:
      tags:
        - "General"
      summary: "Retrieve files"
      description: "Get uploaded files with this endpoint."
      operationId: "get-file"
      produces:
        - "contentType"
      responses:
        "200":
          description: "Successful operation"
  /files/:fileId/:optionalFileName:
    get:
      tags:
        - "General"
      summary: "Retrieve files"
      description: "Get uploaded files with this endpoint."
      operationId: "get-file-with-optional-file-name"
      produces:
        - "contentType of file"
      responses:
        "200":
          description: "Successful operation"
        "404":
          description: "Not found"
  /cases:
    post:
      tags:
        - "Cases"
      summary: "Create new case"
      description: "Upload new cases"
      operationId: "create-case"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "New case object"
          required: true
          schema:
            $ref: "#/definitions/NewCase"
      responses:
        "200":
          description: "Successful operation"

  /cases/:caseId:
    get:
      tags:
        - "Cases"
      summary: "Get case"
      description: "Get a case by caseId"
      operationId: "get-case"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Case"

  /economy/:caseId:
    post:
      tags:
        - "Economy"
      summary: "Add deposit or debt"
      description: "Add voucher"
      operationId: "add-economy"
      parameters:
        - in: "body"
          name: "body"
          description: "Bew economy object"
          required: true
          schema:
            $ref: "#/definitions/NewEconomy"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Economy"
    get:
      tags:
        - "Economy"
      summary: "Get economy on case"
      description: "Add deposit to a case or without a case"
      operationId: "get-economy"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Economy"

  /creditors:
    post:
      tags:
        - "Creditors"
      summary: "Create creditor"
      description: "Create new creditor"
      operationId: "create-creditor"
      parameters:
        - in: "body"
          name: "body"
          description: "Bew economy object"
          required: true
          schema:
            $ref: "#/definitions/NewCreditor"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Creditor"

    get:
      tags:
        - "Creditors"
      summary: "Get creditor"
      description: "Get creditor"
      operationId: "get-creditor"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Creditor"

    put:
      tags:
        - "Creditors"
      summary: "Update creditor"
      description: "Update creditor"
      operationId: "update-creditor"
      responses:
        "200":
          description: "Successful operation"

  /updates/:caseId:
    post:
      tags:
        - "Updates"
      summary: "Add update to a case"
      description: "Add an update to a case to describe it and/or to pause the case and/or remind a caseworker."
      operationId: "new-update"
      parameters:
        - in: "body"
          name: "body"
          description: "Bew economy object"
          required: true
          schema:
            $ref: "#/definitions/NewUpdate"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Update"

    get:
      tags:
        - "Updates"
      summary: "Get update on a case"
      description: "Get all updates on a case."
      operationId: "get-updates-on-case"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Update"

  /updates/types:
    get:
      tags:
        - "Updates"
      summary: "Get update types"
      description: "Get all possible update types"
      operationId: "get-update-types"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UpdateTypes"

  /interations/:caseId:
    post:
      tags:
        - "Interactions"
      summary: "Create interactions"
      description: "Create notes, emails, messages and much more"
      operationId: "create-new-interactions"
      parameters:
        - in: "body"
          name: "body"
          description: "Bew economy object"
          required: true
          schema:
            $ref: "#/definitions/NewInteraction"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Interaction"

    get:
      tags:
        - "Interactions"
      summary: "Create notes, messages and much more"
      description: "Different ways to authenticate"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Interaction"

  /webhooks:
    post:
      tags:
        - "Webhooks"
      summary: "Create webhook"
      description: "Create new webhook"
      operationId: "create-new-webhook"
      parameters:
        - in: "body"
          name: "body"
          description: "New economy object"
          required: true
          schema:
            $ref: "#/definitions/NewWebhook"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Webhook"

    get:
      tags:
        - "Webhooks"
      summary: "Get webhooks"
      description: "Get webhook"
      operationId: "get-webhook"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Webhook"

    delete:
      tags:
        - "Webhooks"
      summary: "Delete webhook"
      description: "Delete created webhook"
      operationId: "delete-webhook"
      responses:
        "200":
          description: "Successful operation"

securityDefinitions:
  Query Parameter:
    type: "apiKey"
    name: "X-Debbie-Auth-Token: <YOUR_VERY_SECRET_TOKEN>"
    in: "header"
  Header Parameter:
    type: "apiKey"
    name: "authToken=<YOUR_VERY_SECRET_TOKEN>"
    in: "query"

definitions:
  Address:
    type: "object"
    properties:
      address:
        type: "string"
      coAddress:
        type: "string"
      zipcode:
        type: "string"
      city:
        type: "string"
      country:
        type: "string"
  NewFile:
    type: "object"
    properties:
      content:
        type: "string"
        format: "base64"
      fileName:
        type: "string"
      contentType:
        type: "string"
  File:
    type: "object"
    properties:
      fileId:
        type: "string"

  NewCase:
    type: "object"
    properties:
      creditorReferenceId:
        type: "string"
      isCompany:
        type: "boolean"
      creditorId:
        type: "string"
      debtors:
        type: "object"
        properties:
          isCompany:
            type: "boolean"
          name:
            type: "string"
          cpr:
            type: "string"
          cvr:
            type: "string"
          email:
            type: "string"
          phone:
            type: "string"
          address:
            $ref: "#/definitions/Address"
      caseGroupId:
        type: "string"
      chainId:
        type: "string"
      caseImportId:
        type: "string"
      customerTerminated:
        type: "boolean"
      financials:
        type: "object"
        properties:
          debts:
            type: "object"
            properties:
              filePath:
                type: "string"

  Case:
    type: "object"
    properties:
      id:
        type: "number"
      exitReason:
        type: "string"
        enum:
          - "Paid"
          - "DebtorEmigrated"
          - "Dead"
          - "Objection"
          - "Withdrawn"
          - "OfferFromUs"
          - "OfferFromDebtor"
          - "DebtRelief"
          - "Bankruptcy"
          - "ForcedDissolved"
          - "ConflictOfInterest"
          - "NegativePayoff"
          - "Overpayment"
          - "Minor"
          - "Irrecoverable"
          - "PartiallyPaid"
          - "CreditorUnresponsive"
          - "ErrorCreditor"
          - "ErrorUs"
          - "Expiration"
          - "Departed"
          - "Unidentified"
          - "AddressUnknown"
      isCompany:
        type: "boolean"
      hasFoundation:
        type: "boolean"
      caseId:
        type: "string"
      createdAt:
        type: "string"
      ownerId:
        type: "string"
      caseGroup:
        type: "string"
      status:
        type: "string"
        enum:
          - "PENDING"
          - "VERIFIED"
          - "CANCELED"
          - "ENDED"
      statusTime:
        type: "string"
      creditorReferenceId:
        type: "string"
      collectorId:
        type: "string"
      debtorContactId:
        type: "string"
      chainId:
        type: "string"
      alternativeContactId:
        type: "string"
      creditor:
        type: "object"
      debtors:
        type: "object"
      contactPerson:
        type: "object"
      alternativeContact:
        type: "object"
      collector:
        type: "object"
      financials:
        type: "object"
      paymentPlan:
        type: "object"
  NewEconomy:
    type: "object"
    properties:
      content:
        type: "string"
        format: "base64"
      fileName:
        type: "string"
      contentType:
        type: "string"
  Economy:
    type: "object"
    properties:
      fileId:
        type: "string"
  NewUpdate:
    type: "object"
    properties:
      content:
        type: "string"
        format: "base64"
      fileName:
        type: "string"
      contentType:
        type: "string"
  Update:
    type: "object"
    properties:
      fileId:
        type: "string"
  UpdateTypes:
    type: "object"
    properties:
      fileId:
        type: "string"
  NewCreditor:
    type: "object"
    properties:
      content:
        type: "string"
        format: "base64"
      fileName:
        type: "string"
      contentType:
        type: "string"
  Creditor:
    type: "object"
    properties:
      fileId:
        type: "string"
  NewInteraction:
    type: "object"
    properties:
      content:
        type: "string"
        format: "base64"
      fileName:
        type: "string"
      contentType:
        type: "string"
  Interaction:
    type: "object"
    properties:
      fileId:
        type: "string"
  NewWebhook:
    type: "object"
    properties:
      content:
        type: "string"
        format: "base64"
      fileName:
        type: "string"
      contentType:
        type: "string"
  Webhook:
    type: "object"
    properties:
      fileId:
        type: "string"
externalDocs:
  description: "Find out more about Debbie"
  url: "https://debbie.dk"
