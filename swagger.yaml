openapi: 3.0.1

info:
  title: Debbie Platform API Docs
  description: The Debbie APIs is a RESTful interface, allowing you to programmatically
    update, add and access your data on the platform. It provides predictable URLs
    for accessing resources, and uses built-in HTTP features to receive commands and
    return responses. This makes it easy to communicate with third party systems.
  contact:
    email: support@debbie.dk
  version: v1.0.0
  x-logo:
    url: https://debbie-platform.github.io/platform-api-docs/deb-logo.svg

externalDocs:
  description: Find out more about Debbie
  url: https://debbie.dk

servers:
  - url: https://api.debbiecollect.com/

tags:
  - name: Cases
    description: Endpoints for interating with cases



paths:
  /v1/{tenantId}/cases:
    post:
      tags:
      - Cases
      summary: Create new case
      description: Create new case allows the api consumer to create new cases
      operationId: create-case
      parameters:
        - in: path
          name: tenantId
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the tenant the case is being created for
      requestBody:
        description: New case object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCase'
            example:
              creditorId: 'uuid'
              referenceId: 'Your id'
              chainId: 'uuid'
              caseImportId: 'uuid'
              isCompany: false
              debtors:
                - 
                  isCompany: false
                  name: "Jane Doe"
                  cpr: "1234567890"
                  email: "jane@example.com"
                  phone: "88888888"
                  address:
                    address: ""

        required: true
      responses:
        200:
          description: Successful operation
          content: {}
        401:
          $ref: "#/components/responses/UnauthorizedError"
        422:
          description: Invalid input data
          content: {}
      x-codegen-request-body-name: body

components:
  schemas:

    Address:
      type: object
      properties:
        address:
          type: string
          description: The street name and number of the address
        coAddress:
          type: string
        zipcode:
          type: string
        city:
          type: string
        country:
          type: string
      required:
        - address
        - zipcode
        - city

    NewVoucherFile:
      type: object
      properties:
        fileName:
          type: string
        contentType:
          type: string
        fileId:
          type: string
          format: uuid
      required:
        - fileName
        - contentType
        - fileId

    NewVoucher:
      type: object
      properties:
        voucherTypeId:
          type: string
          format: uuid
        amount:
          type: integer
        referenceId:
          type: string
        interest:
          type: string
        date:
          type: string
        interestStartDate:
          type: string
        interestEndDate:
          type: string
        dueDate:
          type: string
        appendix:
          $ref: '#/components/schemas/NewVoucherFile'
        imposedByCreditor:
          type: boolean
        referenceVouchers:
          type: array
          items:
            $ref: '#/components/schemas/NewVoucher'
      required:
        - voucherTypeId
        - amount
        - date
        - imposedByCreditor
        - referenceVouchers
    NewCase:
      type: object
      properties:
        creditorId:
          type: string
          format: uuid
          description: Id of the creditor which the case belongs to
        referenceId:
          type: string
        chainId:
          type: string
          format: uuid
          description: Id of the chain the case is to go through
        caseImportId:
          type: string
          format: uuid
        isCompany:
          type: boolean
          description: Does the case concern a company
        debtors:
          type: array
          items:
            type: object
            properties:
              isCompany:
                type: boolean
              name:
                type: string
              cpr:
                type: string
                description: The cpr number of a debtor, only used when debtor is a person.
              cvr:
                type: string
                description: The cvr number of a debtor, only used when debtor is a company.
              email:
                type: string
              phone:
                type: string
              address:
                $ref: '#/components/schemas/Address'
                description: The debtors address
            required:
              - isCompany
              - name
        vouchers:
          type: array
          items:
            $ref: '#/components/schemas/NewVoucher'
      required:
        - creditorId
        - referenceId
        - isCompany
        - debtors
        - vouchers

  
  responses:
    UnauthorizedError:
      description: Access token missing or invalid

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: 'Authentication with an API key kan be done by using a bearer token
        in the Authorization header. This is done using the following format ''Authorization:
        Bearer {token}''.'

security:
  - bearerAuth: []